<?xml version="1.0"?>
<!-- Copyright 2010 NexJ Systems Inc. This software is licensed under the terms of the Eclipse Public License 1.0 -->

<web-app id="web-app" version="2.4"
   xmlns="http://java.sun.com/xml/ns/j2ee"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
   <display-name>NexJ Anonymous Web</display-name>
   ${distributable}
   ${test-filter}
   ${persistence-filter}
   <filter>
      <display-name>CacheFilter</display-name>
      <filter-name>CacheFilter</filter-name>
      <filter-class>nexj.core.rpc.http.CacheFilter</filter-class>
   </filter>
   <filter>
      <display-name>GZipFilter</display-name>
      <filter-name>GZipFilter</filter-name>
      <filter-class>nexj.core.rpc.http.GZipFilter</filter-class>
      ${ifenterprise:
         <init-param>
            <param-name>gzipped</param-name>
            <param-value>/includes/allweb.js,/flat/allflatweb.js,/flat/allflatmobile.js</param-value>
         </init-param>
      }
   </filter>
   ${test-filter-mapping}
   ${persistence-filter-mapping}
   ${ifenterprise:
      <filter-mapping>
         <filter-name>CacheFilter</filter-name>
         <url-pattern>*.cab</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>CacheFilter</filter-name>
         <url-pattern>*.css</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>CacheFilter</filter-name>
         <url-pattern>*.js</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>CacheFilter</filter-name>
         <url-pattern>/debug.htm</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>CacheFilter</filter-name>
         <url-pattern>/css</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>CacheFilter</filter-name>
         <url-pattern>/flat/*</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>CacheFilter</filter-name>
         <url-pattern>/icons/*</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>CacheFilter</filter-name>
         <url-pattern>/images/*</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>CacheFilter</filter-name>
         <url-pattern>/includes/*</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>CacheFilter</filter-name>
         <url-pattern>/shared/*</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>CacheFilter</filter-name>
         <url-pattern>/style</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>CacheFilter</filter-name>
         <url-pattern>/file/*</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>GZipFilter</filter-name>
         <url-pattern>*.css</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>GZipFilter</filter-name>
         <url-pattern>*.htm</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>GZipFilter</filter-name>
         <url-pattern>*.html</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>GZipFilter</filter-name>
         <url-pattern>*.js</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>GZipFilter</filter-name>
         <url-pattern>*.jsp</url-pattern>
      </filter-mapping>
      <filter-mapping>
         <filter-name>GZipFilter</filter-name>
         <url-pattern>/attachment</url-pattern>
      </filter-mapping>
   }
   <filter-mapping>
      <filter-name>GZipFilter</filter-name>
      <url-pattern>/channel/*</url-pattern>
   </filter-mapping>
   <filter-mapping>
      <filter-name>GZipFilter</filter-name>
      <url-pattern>/soap</url-pattern>
   </filter-mapping>
   <filter-mapping>
      <filter-name>GZipFilter</filter-name>
      <url-pattern>/text</url-pattern>
   </filter-mapping>
   <filter-mapping>
      <filter-name>GZipFilter</filter-name>
      <url-pattern>/json</url-pattern>
   </filter-mapping>
   <filter-mapping>
      <filter-name>GZipFilter</filter-name>
      <url-pattern>/meta</url-pattern>
   </filter-mapping>
   <filter-mapping>
      <filter-name>GZipFilter</filter-name>
      <url-pattern>/web/*</url-pattern>
   </filter-mapping>
   <filter-mapping>
      <filter-name>GZipFilter</filter-name>
      <url-pattern>/xml/*</url-pattern>
   </filter-mapping>
   <listener>
      <listener-class>nexj.core.rpc.http.LifecycleListener</listener-class>
   </listener>
   ${session-listener}
   <servlet>
      <display-name>IntegrationServlet</display-name>
      <servlet-name>IntegrationServlet</servlet-name>
      <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
      <init-param>
         <param-name>*</param-name>
         <param-value>HTTPServer.Integration</param-value>
      </init-param>
      <load-on-startup>0</load-on-startup>
   </servlet>
   <servlet>
      <display-name>XMLServlet</display-name>
      <servlet-name>XMLServlet</servlet-name>
      <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
      <init-param>
         <param-name>*</param-name>
         <param-value>HTTPServer.XML</param-value>
      </init-param>
      <load-on-startup>0</load-on-startup>
   </servlet>
   <servlet>
      <display-name>XMLWebServiceServlet</display-name>
      <servlet-name>XMLWebServiceServlet</servlet-name>
      <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
      <init-param>
         <param-name>*</param-name>
         <param-value>HTTPServer.WebService</param-value>
      </init-param>
      <load-on-startup>0</load-on-startup>
   </servlet>
   <servlet>
      <display-name>SOAPServlet</display-name>
      <servlet-name>SOAPServlet</servlet-name>
      <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
      <init-param>
         <param-name>get</param-name>
         <param-value>HTTPServer.WSDL</param-value>
      </init-param>
      <init-param>
         <param-name>post</param-name>
         <param-value>HTTPServer.SOAP</param-value>
      </init-param>
      <load-on-startup>0</load-on-startup>
   </servlet>
   <servlet>
      <display-name>TextServlet</display-name>
      <servlet-name>TextServlet</servlet-name>
      <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
      <init-param>
         <param-name>post</param-name>
         <param-value>HTTPServer.Text</param-value>
      </init-param>
      <load-on-startup>0</load-on-startup>
   </servlet>
   ${ifcomponent:HTTPServer.JSON:
      <servlet>
         <display-name>JSONServlet</display-name>
         <servlet-name>JSONServlet</servlet-name>
         <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
         <init-param>
            <param-name>post</param-name>
            <param-value>HTTPServer.JSON</param-value>
         </init-param>
         <load-on-startup>0</load-on-startup>
      </servlet>
   }
   ${ifenterprise:
      ${ifcomponent:HTTPServer.Attachment:
         <servlet>
            <display-name>AttachmentServlet</display-name>
            <servlet-name>AttachmentServlet</servlet-name>
            <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
            <init-param>
               <param-name>get</param-name>
               <param-value>HTTPServer.Attachment</param-value>
            </init-param>
            <init-param>
               <param-name>post</param-name>
               <param-value>HTTPServer.Attachment</param-value>
            </init-param>
            <load-on-startup>0</load-on-startup>
         </servlet>
      }
      ${ifcomponent:HTTPServer.BinaryViewer:
         <servlet>
            <display-name>BinaryViewerServlet</display-name>
            <servlet-name>BinaryViewerServlet</servlet-name>
            <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
            <init-param>
               <param-name>get</param-name>
               <param-value>HTTPServer.BinaryViewer</param-value>
            </init-param>
            <init-param>
               <param-name>post</param-name>
               <param-value>HTTPServer.BinaryViewer</param-value>
            </init-param>
            <load-on-startup>0</load-on-startup>
         </servlet>
      }
      ${ifcomponent:HTTPServer.Chart:
         <servlet>
            <display-name>ChartServlet</display-name>
            <servlet-name>ChartServlet</servlet-name>
            <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
            <init-param>
               <param-name>get</param-name>
               <param-value>HTTPServer.Chart</param-value>
            </init-param>
             <init-param>
               <param-name>post</param-name>
               <param-value>HTTPServer.Chart</param-value>
            </init-param>
            <load-on-startup>0</load-on-startup>
         </servlet>
      }
      ${ifcomponent:HTTPServer.Style:
         <servlet>
            <display-name>StyleServlet</display-name>
            <servlet-name>StyleServlet</servlet-name>
            <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
            <init-param>
               <param-name>get</param-name>
               <param-value>HTTPServer.Style</param-value>
            </init-param>
            <load-on-startup>0</load-on-startup>
         </servlet>
      }
      ${ifcomponent:HTTPServer.File:
         <servlet>
            <display-name>FileServlet</display-name>
            <servlet-name>FileServlet</servlet-name>
            <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
            <init-param>
               <param-name>get</param-name>
               <param-value>HTTPServer.File</param-value>
            </init-param>
            <load-on-startup>0</load-on-startup>
         </servlet>
      }
      ${ifcomponent:HTTPServer.CSS:
         <servlet>
            <display-name>CSSServlet</display-name>
            <servlet-name>CSSServlet</servlet-name>
            <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
            <init-param>
               <param-name>get</param-name>
               <param-value>HTTPServer.CSS</param-value>
            </init-param>
            <load-on-startup>0</load-on-startup>
         </servlet>
      }
      ${ifcomponent:HTTPServer.FlatWeb:
         <servlet>
            <display-name>FlatWebServlet</display-name>
            <servlet-name>FlatWebServlet</servlet-name>
            <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
            <init-param>
               <param-name>get</param-name>
               <param-value>HTTPServer.FlatWeb</param-value>
            </init-param>
            <init-param>
               <param-name>post</param-name>
               <param-value>HTTPServer.FlatWeb</param-value>
            </init-param>
            <load-on-startup>0</load-on-startup>
         </servlet>
      }
      ${ifcomponent:HTTPServer.Notification:
         <servlet>
            <display-name>NotificationServlet</display-name>
            <servlet-name>NotificationServlet</servlet-name>
            <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
            <init-param>
               <param-name>get</param-name>
               <param-value>HTTPServer.Notification</param-value>
            </init-param>
            <init-param>
               <param-name>post</param-name>
               <param-value>HTTPServer.Notification</param-value>
            </init-param>
            <load-on-startup>0</load-on-startup>
         </servlet>
      }
	   ${ifcomponent:HTTPServer.AnonDispatcher:
		   <servlet>
		      <display-name>AnonDispatcherServlet</display-name>
		      <servlet-name>AnonDispatcherServlet</servlet-name>
		      <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
		      <init-param>
		         <param-name>*</param-name>
		         <param-value>HTTPServer.AnonDispatcher</param-value>
		      </init-param>
		      <load-on-startup>0</load-on-startup>
		   </servlet>
		}
		${ifcomponent:HTTPServer.StaticDispatcher:
		   <servlet>
		      <display-name>StaticDispatcherServlet</display-name>
		      <servlet-name>StaticDispatcherServlet</servlet-name>
		      <servlet-class>nexj.core.rpc.http.GenericHTTPServlet</servlet-class>
		      <init-param>
		         <param-name>*</param-name>
		         <param-value>HTTPServer.StaticDispatcher</param-value>
		      </init-param>
		      <load-on-startup>0</load-on-startup>
		   </servlet>
      }
   }
   <servlet-mapping>
      <servlet-name>IntegrationServlet</servlet-name>
      <url-pattern>/channel/*</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>SOAPServlet</servlet-name>
      <url-pattern>/soap</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>TextServlet</servlet-name>
      <url-pattern>/text</url-pattern>
   </servlet-mapping>
   ${ifcomponent:HTTPServer.JSON:
      <servlet-mapping>
         <servlet-name>JSONServlet</servlet-name>
         <url-pattern>/json</url-pattern>
      </servlet-mapping>
   }
   <servlet-mapping>
      <servlet-name>XMLWebServiceServlet</servlet-name>
      <url-pattern>/web</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>XMLWebServiceServlet</servlet-name>
      <url-pattern>/web/*</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>XMLServlet</servlet-name>
      <url-pattern>/xml</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>XMLServlet</servlet-name>
      <url-pattern>/xml/*</url-pattern>
   </servlet-mapping>
   ${ifenterprise:
      ${ifcomponent:HTTPServer.Attachment:
         <servlet-mapping>
            <servlet-name>AttachmentServlet</servlet-name>
            <url-pattern>/attachment</url-pattern>
         </servlet-mapping>
      }
      ${ifcomponent:HTTPServer.BinaryViewer:
         <servlet-mapping>
            <servlet-name>BinaryViewerServlet</servlet-name>
            <url-pattern>/binaryviewer</url-pattern>
         </servlet-mapping>
      }
      ${ifcomponent:HTTPServer.Notification:
         <servlet-mapping>
            <servlet-name>NotificationServlet</servlet-name>
            <url-pattern>/notification</url-pattern>
         </servlet-mapping>
      }
      ${ifcomponent:HTTPServer.Chart:
         <servlet-mapping>
            <servlet-name>ChartServlet</servlet-name>
            <url-pattern>/chart</url-pattern>
         </servlet-mapping>
      }
      ${ifcomponent:HTTPServer.Style:
         <servlet-mapping>
            <servlet-name>StyleServlet</servlet-name>
            <url-pattern>/style</url-pattern>
         </servlet-mapping>
      }
      ${ifcomponent:HTTPServer.File:
         <servlet-mapping>
            <servlet-name>FileServlet</servlet-name>
            <url-pattern>/file/*</url-pattern>
         </servlet-mapping>
      }
      ${ifcomponent:HTTPServer.CSS:
         <servlet-mapping>
            <servlet-name>CSSServlet</servlet-name>
            <url-pattern>/css</url-pattern>
         </servlet-mapping>
      }
      ${ifcomponent:HTTPServer.FlatWeb:
         <servlet-mapping>
            <servlet-name>FlatWebServlet</servlet-name>
            <url-pattern>*.html</url-pattern>
         </servlet-mapping>
      }
      ${ifcomponent:HTTPServer.AnonDispatcher:
		   <servlet-mapping>
		      <servlet-name>AnonDispatcherServlet</servlet-name>
		      <url-pattern>/shared/*</url-pattern>
		   </servlet-mapping>
		   <servlet-mapping>
		      <servlet-name>AnonDispatcherServlet</servlet-name>
		      <url-pattern>/flat/*</url-pattern>
		   </servlet-mapping>
		}
		${ifcomponent:HTTPServer.StaticDispatcher:
		   <servlet-mapping>
		      <servlet-name>StaticDispatcherServlet</servlet-name>
		      <url-pattern>/</url-pattern>
		   </servlet-mapping>
		}
   }
   <session-config>
      <session-timeout>${session-timeout}</session-timeout>
   </session-config>
   <welcome-file-list>
      <welcome-file>index.htm</welcome-file>
      <welcome-file>.hidden</welcome-file>
   </welcome-file-list>
   ${resource-env-ref}
   ${resource-ref}
   <security-constraint>
      <web-resource-collection>
         <web-resource-name>hidden-res</web-resource-name>
         <url-pattern>*.hidden</url-pattern>
         <url-pattern>/includes/*</url-pattern>
         <url-pattern>/dialog.htm</url-pattern>
         <url-pattern>/popup.htm</url-pattern>
         ${ifenterprise:
            <url-pattern>*.hta</url-pattern>
           }
      </web-resource-collection>
      <auth-constraint/>
      ${confidential}
   </security-constraint>
</web-app>
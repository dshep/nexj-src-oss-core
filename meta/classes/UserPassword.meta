<Class aspects="LOCKING" description="Storage of Local Passwords for users">
   <Attributes>
      <Attribute description="User for which the password applies" name="user" required="true" type="User"/>
      <Attribute description="Password hash value" name="passwordHash" required="true" type="string" visibility="protected"/>
      <Attribute description="Active flag -- only one per user should be true" initializer="#t" name="active" required="true" type="boolean"/>
      <Attribute description="Date Password was created" initializer="(now)" name="createdDate" required="true" type="timestamp"/>
      <Attribute description="Date Password was inactivated" name="inactiveDate" type="timestamp"/>
   </Attributes>
   <Events>
      <Event name="create" visibility="public">
         <Actions>
            <Action condition="(not (@ active))" description="Since create can be called again if something updates the an attribute like active, we need to have all update logic here." name="checkActive" type="before"><![CDATA[(logger'debug "password created with inactive already set!!")
(this'inactiveDate (now))]]></Action>
         </Actions>
      </Event>
      <Event name="update" visibility="public">
         <Actions>
            <Action condition="(this'updated 'active)" description="Keep track of when the password was marked inactive." name="updateInactiveDate" type="before"><![CDATA[(if (= #f (@ active))
   (this'inactiveDate (now))
)]]></Action>
         </Actions>
      </Event>
      <Event args="password" description="Computes a secure hash function of a given password" name="hashPassword" static="true">
         <Actions>
            <Action name="main" type="main"><![CDATA[(let ((algo (java.security.MessageDigest'getInstance "SHA-256")))
   (algo'update ((ifnull password "")'getBytes "UTF-8"))
   (nexj.core.util.Base64Util'encode (algo'digest))
)]]></Action>
         </Actions>
      </Event>
   </Events>
   <PersistenceMapping dataSource="DefaultRelationalDatabase" lockingAttribute="locking">
      <RelationalMapping keyGenerator="KeyGenerator.GUIDGen" primaryTable="UserPassword">
         <AttributeMappings>
            <AttributeMapping column="passwordHash" name="passwordHash"/>
            <AttributeMapping column="createdDate" name="createdDate"/>
            <AttributeMapping column="inactiveDate" name="inactiveDate"/>
            <AttributeMapping column="locking" name="locking"/>
            <AttributeMapping column="activeFlag" name="active"/>
            <AttributeMapping destinationKey="Principal.PK" name="user" sourceKey="UserPassword.FK_User"/>
         </AttributeMappings>
      </RelationalMapping>
   </PersistenceMapping>
</Class>
